#version=DEVEL
install

# logging --host=log.justhost.ru
text

url --url=http://mirror.yandex.ru/centos/6/os/x86_64
#lang en_US.UTF-8
lang ru_RU.UTF-8
keyboard us
# zerombr yes

# Настройка сети
network --onboot yes --bootproto static --ip {{ data['ip'] }} --netmask {{ data['netmask'] }} --gateway {{ data['gateway'] }} --nameserver {{ data['dns'] }} --hostname={{ data['hostname'] }}

rootpw  --iscrypted {{ data['password'] }}
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --disabled
timezone --utc Europe/Moscow

%include /tmp/part-include

repo --name="CentOS"  --baseurl=http://mirror.yandex.ru/centos/6/os/x86_64 --cost=100

poweroff

%packages

@core
nano
wget
mc

%end

%pre --log=/root/install-pre.log
#!/bin/bash

echo "Linux box by Justhost.ru. Created `/bin/date`" > /etc/motd

# DNS
echo "nameserver {{ data['dns'] }}" > /etc/resolv.conf

# KVM
if [ -b /dev/vda ] ; then
    echo "# Автоматическая разбивка LVM без SWAP для 1 диска" > /tmp/part-include

    # Очистка диска
    echo "zerombr yes" >> /tmp/part-include
    echo "clearpart --all --drives=vda --initlabel" >> /tmp/part-include

    # Загрузчик
    echo "bootloader --location=mbr --driveorder=vda --append=\"nomodeset crashkernel=auto rhgb quiet\"" >> /tmp/part-include

    # Разбивка диска LVM
    echo "part /boot --size=256 --ondisk=vda --asprimary --fstype=ext4" >> /tmp/part-include
    echo "part pv.01 --size=1 --grow --ondisk=vda" >> /tmp/part-include
    echo "volgroup vg_jh pv.01" >> /tmp/part-include
    echo "logvol swap --fstype=swap --name=lv_swap --vgname=vg_jh --size=512 --maxsize=512" >> /tmp/part-include
    echo "logvol / --fstype=ext4 --vgname=vg_jh --size=1 --grow --name=lv_root" >> /tmp/part-include

# Физический сервер
elif [ -b /dev/sda ] ; then

    hds=""
    mymedia=""

    for file in /sys/block/sd*; do
    hds="$hds $(basename $file)"
    done

    set $hds
    numhd=$(echo $#)

    drive1=$(echo $hds | cut -d' ' -f1)
    drive2=$(echo $hds | cut -d' ' -f2)


    if [ $numhd == "2" ]  ; then
        echo "# Автоматическая разбивка RAID I, генерируемая %pre для 2 дисков" > /tmp/part-include

        # Очистка диска
        echo "zerombr yes" >> /tmp/part-include
        echo "clearpart --all --drives=sda,sdb --initlabel" >> /tmp/part-include

        # Загрузчик
        echo "bootloader --location=mbr --timeout=0 --driveorder=sda,sdb --append=\"crashkernel=auto rhgb quiet\"" >> /tmp/diskinfo

        # /boot 512MB
        echo "part raid.01 --ondisk=sda --asprimary --size=512" >> /tmp/part-include
        echo "part raid.02 --ondisk=sdb --asprimary --size=512" >> /tmp/part-include
        echo "raid /boot --fstype=ext4 --level=1 --device=md0 raid.01 raid.02" >> /tmp/part-include
        # / 10GB = 10240
        echo "part raid.11 --ondisk=sda --size=10240" >> /tmp/part-include
        echo "part raid.12 --ondisk=sdb --size=10240" >> /tmp/part-include
        raid /      --fstype=ext4 --level=1 --device=md1 raid.11 raid.12
        # /tmp 5GB = 5120
        echo "part raid.21 --ondisk=sda --size=5120" >> /tmp/part-include
        echo "part raid.22 --ondisk=sdb --size=5120" >> /tmp/part-include
        echo "raid /tmp   --fstype=ext4 --level=1 --device=md2 raid.21 raid.22" >> /tmp/part-include
        # swap 8GB = 8192
        echo "part raid.31 --ondisk=sda --size=8192" >> /tmp/part-include
        echo "part raid.32 --ondisk=sdb --size=8192" >> /tmp/part-include
        echo "raid swap  --fstype=swap --level=1 --device=md3 raid.31 raid.32" >> /tmp/part-include
        # /usr 10GB = 10240
        echo "part raid.41 --ondisk=sda --size=10240" >> /tmp/part-include
        echo "part raid.42 --ondisk=sdb --size=10240" >> /tmp/part-include
        echo "raid /tmp   --fstype=ext4 --level=1 --device=md4 raid.41 raid.42" >> /tmp/part-include
        # /var 60 = 61440
        echo "part raid.51 --ondisk=sda --size=61440" >> /tmp/part-include
        echo "part raid.52 --ondisk=sdb --size=61440" >> /tmp/part-include
        echo "raid /tmp   --fstype=ext4 --level=1 --device=md5 raid.51 raid.52" >> /tmp/part-include
        # /home Всё доступное пространство
        echo "part raid.61 --ondisk=sda --size=1024 --grow" >> /tmp/part-include
        echo "part raid.62 --ondisk=sdb --size=1024 --grow" >> /tmp/part-include
        echo "raid /home   --fstype=ext4 --level=1 --device=md6 raid.61 raid.62" >> /tmp/part-include

    else
        echo "#partitioning scheme generated in %pre for 1 drive" > /tmp/part-include

        # Очистка диска
        echo "zerombr yes" >> /tmp/part-include
        echo "clearpart --all --drives=sda --initlabel" >> /tmp/part-include

        # Загрузчик
        echo "bootloader --location=mbr --timeout=0 --driveorder=sda --append=\"crashkernel=auto rhgb quiet\"" >> /tmp/diskinfo
        echo "part /boot --fstype ext4  --asprimary --size 512" >> /tmp/part-include
        echo "part / --fstype ext4 --size 10240" >> /tmp/part-include
        echo "part /tmp --fstype ext4 --size 5120" >> /tmp/part-include
        # echo "part swap --fstype=swap --size 5120" >> /tmp/part-include
        echo "part /usr --fstype ext4 --size 10240" >> /tmp/part-include
        echo "part /var --fstype ext4 --size 61440" >> /tmp/part-include
        echo "part /home --fstype ext4 --size 1024 --grow" >> /tmp/part-include
    fi

fi

%end

%post --log=/root/install-post.log

exec < /dev/tty6 > /dev/tty6
chvt 6

PATH=/bin:/sbin:/usr/bin:/usr/sbin
export PATH

wget https://raw.githubusercontent.com/servancho/pytin/master/scripts/centos/setup.sh -O /root/setup.sh
bash /root/setup.sh
rm /root/setup.sh

yum -y install nano wget openssh-clients gcc gcc-c++ flex bison make bind bind-libs bind-utils openssl openssl-devel perl perl-CPAN quota libaio libcom_err-devel libcurl-devel gd zlib-devel zip unzip libcap-devel cronie bzip2 cyrus-sasl-devel perl-ExtUtils-Embed autoconf automake libtool which patch db4-devel

# Настройка алиасов
# DEVICE=eth0:0
# BOOTPROTO=static
# IPADDR=192.168.0.10
# NETMASK=255.255.255.0
# ONBOOT=yes

# DirectAdmin
# 1: custombuild 2.0       Apache 2.4, mod_ruid2, php 5.5. Can be set to use mod_php, php-FPM or fastcgi.
# 2: custombuild 1.1:      end-of-life software.  Apache 2.x, php 4, 5, or both in cli and/or suphp. Defaults to php 5.2
# 3: custombuild 1.2:      Production version: Apache 2.x, php 5 in cli or suphp. Defaults to php 5.3
# 4: custombuild 2.0 BETA: Apache 2.4, php-fpm, php 5.6. Can be set to use mod_ruid2, mod_php, php-FPM or fastcgi.
echo "{{ data['version'] }}" > /root/.custombuild

# Установка с готовыми параметрами
# mkdir -p /usr/local/directadmin/custombuild
# wget -O /usr/local/directadmin/custombuild/options.conf http://yourdomain.com/options.conf

wget http://www.directadmin.com/setup.sh -O /root/setup.sh
bash /root/setup.sh {{ data['cid'] }} {{ data['lid'] }} {{ data['hostname'] }} eth0 {{ data['ip'] }}

### Замена proftpd на pureftpd
cd /usr/local/directadmin/custombuild
./build set proftpd no
./build set pureftpd yes
./build pureftpd

# /etc/sysconfig/iptables-config
# IPTABLES_MODULES="ip_conntrack_ftp"

### Configure BFD and APF

cp /etc/apf/conf.apf /etc/apf/conf.apf.bkp
# ingress tcp
perl -pi -e 's/IG_TCP_CPORTS="[^\"]*"/IG_TCP_CPORTS="20,21,22,25,53,80,110,143,443,465,587,953,993,995,2222,30000_35000"/g' /etc/apf/conf.apf
perl -pi -e 's/IG_UDP_CPORTS="[^\"]*"/IG_UDP_CPORTS="53,953"/g' /etc/apf/conf.apf

# egress tcp
perl -pi -e 's/EG_TCP_CPORTS="[^\"]*"/EG_TCP_CPORTS="21,25,80,443,43,30000_35000"/g' /etc/apf/conf.apf

perl -pi -e 's/DEVEL_MODE="1"/DEVEL_MODE="0"/g' /etc/apf/conf.apf


cat <<EOF > /etc/httpd/conf/extra/httpd-info.conf
<Location /server-status>
    SetHandler server-status
    AuthType Basic
    AuthName Stat
    AuthGroupFile /dev/null
    AuthUserFile /etc/httpd/conf/secret/passwd
    require valid-user
    Order deny,allow
    Deny from all
    Allow from all
</Location>

ExtendedStatus On

<Location /server-info>
    SetHandler server-info
    Order deny,allow
    Deny from all
    Allow from .example.com
</Location>
EOF

mkdir -p /etc/httpd/conf/secret

### Генерация пароля для server-status (info)
passhtstatus=`perl -le'print map+(A..Z,a..z,0..9)[rand 62],0..15'`
echo "Password for Apache server-status user: "${passhtstatus} >> /root/server-status.txt
echo "Password for Apache server-status user: "${passhtstatus}
htpasswd -b -c /etc/httpd/conf/secret/passwd info ${passhtstatus}

# Отключение swap
#sed -e '/^.*swap.*$/ s/^#*/#/' -i /etc/fstab

# We done.
echo " * Post-Install complete. System rebooting." >>/root/ks.log
echo " * Post-Install complete. System rebooting."

# Переключение консоли обратно на первую и возврат в Anaconda
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1
chvt 1

sleep 10

# Завершение
exit 0
exit 0

%end
